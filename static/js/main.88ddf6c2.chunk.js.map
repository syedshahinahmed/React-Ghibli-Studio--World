{"version":3,"sources":["logo.png","components/Movies.js","components/Navigation.js","components/Footer.js","components/Contact.js","App.js","components/Router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Movies","_ref","flims","react_default","a","createElement","className","src","Logo","alt","map","movie","key","id","title","description","length","concat","substring","release_date","director","Navigation","type","htmlFor","react_router_dom","to","Footer","href","Component","Contact","Fragment","components_Navigation","style","marginTop","action","method","name","placeholder","required","cols","rows","value","components_Footer","App","state","_this2","this","fetch","then","res","json","data","setState","console","log","catch","err","components_Movies","Router","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88ddf6c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e86d97c0.png\";","import React from \"react\";\nimport Logo from \"../logo.png\";\n\nconst Movies = ({ flims }) => {\n  return (\n    <div className=\"movies__root\">\n      <center>\n        <img src={Logo} alt=\"Logo\" />\n      </center>\n      <div className=\"movies__container\">\n        {flims.map(movie => (\n          <div className=\"movies__card\" key={movie.id}>\n            <h1> {movie.title}</h1>\n            <p>\n              Description:{\" \"}\n              {movie.description.length < 300\n                ? `${movie.description}`\n                : `${movie.description.substring(0, 300)}...`}\n            </p>\n            <p>Release : {movie.release_date}</p>\n            <p>Director: {movie.director}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <header>\n      <div className=\"nav\">\n        <input type=\"checkbox\" id=\"nav-check\" />\n        <div className=\"nav-header\">\n          <div className=\"nav-title\">Ghibli Studio</div>\n        </div>\n        <div className=\"nav-btn\">\n          <label htmlFor=\"nav-check\">\n            <span />\n            <span />\n            <span />\n          </label>\n        </div>\n\n        <div className=\"nav-links\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/contact\">Contact</Link>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Footer extends Component {\n  // const dateUpdate = document.write(new Date().getFullYear());\n\n  render() {\n    return (\n      <footer>\n        <h5 className=\"txt\">Get connected with us on social networks!</h5>\n        <div className=\"social-item\">\n          {/* <!--Facebook--> */}\n          <a className=\"fb-ic\" href=\"#\">\n            <i className=\"fab fa-facebook \"> </i>\n          </a>\n          {/* <!--Twitter--> */}\n          <a className=\"tw-ic\" href=\"#\">\n            {\" \"}\n            <i className=\"fab fa-twitter \"> </i>\n          </a>\n          {/* <!--Google +--> */}\n          <a className=\"gplus-ic\" href=\"#\">\n            <i className=\"fab fa-google-plus \"> </i>\n          </a>\n          {/* <!--Linkedin--> */}\n          <a className=\"li-ic\" href=\"#\">\n            <i className=\"fab fa-linkedin \"> </i>\n          </a>\n          {/* <!--Instagram--> */}\n          <a className=\"ins-ic\" href=\"#\">\n            <i className=\"fab fa-instagram \"> </i>\n          </a>\n        </div>\n        <div className=\"footer-copyright\">\n          <p>\n            Â© 2019 Copyright:{\" \"}\n            <Link className=\"footer-brand\" to=\"/\">\n              Ghibli Studio\n            </Link>\n          </p>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Navigation from \"./Navigation\";\nimport Logo from \"../logo.png\";\nimport Footer from \"./Footer\";\n\nconst Contact = () => (\n  <React.Fragment>\n    <Navigation />\n    <div className=\"div\" style={{ marginTop: \"50px\" }}>\n      <center>\n        <img src={Logo} alt=\"Logo\" />\n      </center>\n    </div>\n    <div id=\"contact\" className=\"contact\">\n      <h1>Contact Us</h1>\n\n      <div className=\"contact-form\">\n        <form action=\"\" method=\"POST\">\n          <div className=\"txtbox\">\n            <label htmlFor=\"fname\">Full Name :</label>\n            <input\n              type=\"text\"\n              name=\"fname\"\n              id=\"fname\"\n              placeholder=\"Enter Your Name\"\n              required\n            />\n          </div>\n\n          <div className=\"txtbox\">\n            <label htmlFor=\"email\">Email :</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter Your Email\"\n              required\n            />\n          </div>\n\n          <div className=\"txtbox\">\n            <label htmlFor=\"phone\">Phone :</label>\n            <input\n              type=\"number\"\n              name=\"phone\"\n              id=\"phone\"\n              placeholder=\"Enter Your Phone\"\n              required\n            />\n          </div>\n\n          <div className=\"txtbox\">\n            <label htmlFor=\"message\">Message :</label>\n            <textarea\n              name=\"message\"\n              id=\"message\"\n              cols=\"30\"\n              rows=\"10\"\n              required\n            />\n          </div>\n\n          <input type=\"submit\" value=\"Send\" />\n        </form>\n      </div>\n    </div>\n    <Footer />\n  </React.Fragment>\n);\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Movies from \"./components/Movies\";\nimport Navigation from \"./components/Navigation\";\nimport Contact from \"./components/Contact\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting The Initial State\n  state = {\n    flims: []\n  };\n\n  // Using Component Mount and Making Calls to API and Pulling Data\n  componentDidMount() {\n    fetch(\"https://ghibliapi.herokuapp.com/films\")\n      // fetch(\"https://ghibliapi.herokuapp.com/locations/\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ flims: data });\n        console.log(this.state.flims);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Movies flims={this.state.flims} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport Contact from \"./Contact\";\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" component={App} exact />\n      <Route path=\"/contact\" component={Contact} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}